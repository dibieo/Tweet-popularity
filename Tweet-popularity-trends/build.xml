<!--
     A build script that checks whether Carrot2 API examples compile
     and run without exceptions.
  -->
<project name="carrot2.api" default="carrot2.api.test">
  <!--
       Builds the examples.
    -->
  <target name="carrot2.api.build">
    <!--
         Dependencies (JARs) required for clustering directly fed documents.
      -->
    <path id="libs.required">
      <fileset dir="lib/required" includes="**/*.jar" />
    </path>
      
    <!--
         Dependencies (JARs) required for both fetching documents using
         document sources and clustering them using one of Carrot2 algorithms.
      -->
    <path id="libs.all">
      <fileset dir="lib" includes="**/*.jar" />
    </path>

    <mkdir dir="tmp/classes" />

    <javac srcdir="examples"
           destdir="tmp/classes"
           source="1.6" target="1.6"
           encoding="UTF-8">
      <classpath>
        <fileset dir=".">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>

    <copy todir="tmp/classes">
      <fileset dir="examples/">
        <exclude name="*.java" />
      </fileset>
    </copy>
  </target>

  <!-- Runs selected classes -->
  <target name="carrot2.api.test" depends="carrot2.api.build, carrot2.api.test.only">
  </target>

  <target name="carrot2.api.test.maven">
      <path id="libs.all">
        <fileset dir="${basedir}/target">
          <include name="carrot2*.jar" />
          <include name="dependency/*.jar" />
        </fileset>
      </path>
      <path id="libs.required" refid="libs.all" />

      <antcall target="carrot2.api.test.only" inheritrefs="true" />
  </target>

  <!-- Runs selected classes (invoked from Maven too). -->
  <target name="carrot2.api.test.only">
    <!-- Run some example classes -->
    <run.example classname="org.carrot2.examples.clustering.ClusteringDocumentList" dependencies="libs.required" />
    <run.example classname="org.carrot2.examples.clustering.UsingCachingController" dependencies="libs.all" />
    <run.example classname="org.carrot2.examples.clustering.UsingAttributes" dependencies="libs.all" />
    <run.example classname="org.carrot2.examples.clustering.UsingComponentSuites" dependencies="libs.all" />
    <run.example classname="org.carrot2.examples.clustering.UsingCustomLanguageModel" dependencies="libs.required" />
    <run.example classname="org.carrot2.examples.clustering.UsingCustomLexicalResources"  dependencies="libs.required"/>
    <run.example classname="org.carrot2.examples.core.LoadingAttributeValuesFromXml" dependencies="libs.required" />
    <run.example classname="org.carrot2.examples.core.SavingAttributeValuesToXml" dependencies="libs.required" />

    <!-- Create a simple Lucene index and run Lucene examples. -->
    <delete dir="index" failonerror="true" includeemptydirs="true" />
    <run.example classname="org.carrot2.examples.CreateLuceneIndex" dependencies="libs.all">
      <arg file="index" />
    </run.example>
    <run.example classname="org.carrot2.examples.clustering.ClusteringDataFromLucene" dependencies="libs.all">
      <arg file="index" />
    </run.example>
    <run.example classname="org.carrot2.examples.clustering.ClusteringDataFromLuceneWithCustomFields" dependencies="libs.all">
      <arg file="index" />
    </run.example>
    <delete dir="index" failonerror="true" includeemptydirs="true" />
  </target>

  <!-- Removes all compiled binaries -->
  <target name="clean">
    <delete dir="tmp" />
  </target>

  <!-- A macro that runs the specified class. -->
  <macrodef name="run.example">
    <attribute name="classname" />
    <attribute name="dependencies" />
    <element name="args" implicit="true" optional="true" />

    <sequential>
      <echo>Running: @{classname}</echo>
      <mkdir dir="tmp" />
      <java fork="true"
            classname="@{classname}" logError="true"
            failonerror="true" output="tmp/@{classname}.log">
        <classpath>
          <pathelement location="tmp/classes"/>
          <path refid="@{dependencies}" />
        </classpath>
        <args />
      </java>
    </sequential>
  </macrodef>
</project>
